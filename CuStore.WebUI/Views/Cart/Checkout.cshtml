@using CuStore.WebUI.ViewModels
@model CheckoutViewModel

@{
    ViewBag.Title = "CuStore: Your order";
}

<h2>Order: shipping information</h2>
<p>Please fill shipping method and delivery address</p>

<h4>Contact data:</h4>
<div class="well">
    <div class="form-group">
        <label>First name:</label>
        @Html.DisplayFor(x => x.Cart.User.FirstName, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Last name:</label>
        @Html.DisplayFor(x => x.Cart.User.LastName, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>E-mail:</label>
        @Html.DisplayFor(x => x.Cart.User.Email, new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Phone:</label>
        @Html.DisplayFor(x => x.Cart.User.PhoneNumber, new { @class = "form-control" })
    </div>
</div>

<script type="text/javascript">
    function EnableControl() {
        var fNameBox = document.getElementById('FirstName');
        var lNameBox = document.getElementById('LastName');
        var phoneBox = document.getElementById('Phone');
        var countryBox = document.getElementById('Country');
        var cityBox = document.getElementById('City');
        var streetBox = document.getElementById('Street');
        var postalCodeBox = document.getElementById('PostalCode');

        var checkbox = document.getElementById('UseUserAddress');

        if (checkbox.checked) {
            fNameBox.disabled = true;
            lNameBox.disabled = true;
            phoneBox.disabled = true;
            countryBox.disabled = true;
            cityBox.disabled = true;
            streetBox.disabled = true;
            postalCodeBox.disabled = true;
        } else {
            fNameBox.removeAttribute('disabled');
            lNameBox.removeAttribute('disabled');
            phoneBox.removeAttribute('disabled');
            countryBox.removeAttribute('disabled');
            cityBox.removeAttribute('disabled');
            streetBox.removeAttribute('disabled');
            postalCodeBox.removeAttribute('disabled');
        }
    }
</script>

@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.OrderValue)

    if (Model.Cart?.User?.UserAddress != null)
    {
        <h3>User Address:</h3>
        <div class="form-group">
            <label>Use user address</label>
            @Html.CheckBoxFor(x => x.UseUserAddress, new { id = "UseUserAddress", onclick = "EnableControl()" })
        </div>

        <div class="well">
            <div class="form-group">
                @Html.DisplayFor(x => x.Cart.User.UserAddress.Street, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.DisplayFor(x => x.Cart.User.UserAddress.City, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.DisplayFor(x => x.Cart.User.UserAddress.PostalCode, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.DisplayFor(x => x.Cart.User.UserAddress.Country, new { @class = "form-control" })
            </div>
        </div>
    }

    @Html.ValidationSummary()

    <div class="form-group">
        <label>First name:</label>
        @Html.TextBoxFor(x => x.ShippingAddress.FirstName, new { id = "FirstName", @class = "form-control", Value = Model?.Cart?.User?.FirstName })
    </div>
    <div class="form-group">
        <label>Last name:</label>
        @Html.TextBoxFor(x => x.ShippingAddress.LastName, new { id = "LastName", @class = "form-control", Value = Model?.Cart?.User?.LastName })
    </div>
    <div class="form-group">
        <label>Phone:</label>
        @Html.TextBoxFor(x => x.ShippingAddress.Phone, new { id = "Phone", @class = "form-control", Value = Model?.Cart?.User?.PhoneNumber })
    </div>
    <div class="form-group">
        <label>Street:</label>
        @Html.TextBoxFor(x => x.ShippingAddress.Street, new { id = "Street", @class = "form-control" })
    </div>
    <div class="form-group">
        <label>City:</label>
        @Html.TextBoxFor(x => x.ShippingAddress.City, new { id = "City", @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Postal code:</label>
        @Html.TextBoxFor(x => x.ShippingAddress.PostalCode, new { id = "PostalCode", @class = "form-control" })
    </div>
    <div class="form-group">
        <label>Country:</label>
        @Html.TextBoxFor(x => x.ShippingAddress.Country, new { id = "Country", @class = "form-control" })
    </div>

    <h3>Shipping method:</h3>
    @Html.DropDownListFor(x => x.SelectedShippingMethodId, Model.ShippingMethods, new { @class = "form-control" })

    <h3>Total:</h3>
    <div class="form-group">
        <h2><span class="label label-primary">@Model.OrderValue</span></h2>
    </div>

    <div class="text-center">
        <input class="btn btn-primary" type="submit" value="Confirm order" />
    </div>
}




