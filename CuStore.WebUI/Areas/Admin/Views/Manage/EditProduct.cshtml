@model CuStore.WebUI.Areas.Admin.ViewModels.EditProductViewModel

@{
    ViewBag.Title = "Edit product";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@helper TextBoxPropertyWithLabelAndValidation(string value, string label)
{
<div class="form-group">
    <label>@label</label>
    @Html.TextBoxFor(v => value, new { @class = "form-control" })
    @Html.ValidationMessageFor(v => value)
</div>
}

<div class="panel">
    <div class="panel-heading">
        <h3>Editing product: @Model.Product.Name</h3>
    </div>

    @using (Html.BeginForm("EditProduct", "Manage", FormMethod.Post, new { enctype = "multipart/form-data", area = "Admin" }))
    {
        @Html.HiddenFor(m => m.Product.Id)

        <div class="form-group">
            <label>Product ID:</label>
            @Html.DisplayFor(x => x.Product.Id, new { @class = "form-control" })
        </div>

        @TextBoxPropertyWithLabelAndValidation(Model.Product.Code, "Code:")
        @TextBoxPropertyWithLabelAndValidation(Model.Product.Name, "Name:")

        <div class="form-group">
            <label>Description:</label>
            @Html.TextBoxFor(x => x.Product.Description, new { @class = "form-control", rows = 5 })
        </div>

        <div class="form-group">
            <label>Price:</label>
            @Html.TextBoxFor(x => x.Product.Price, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Product.Price)
        </div>

        <div class="form-group">
            <label>Quantity in stock:</label>
            @Html.TextBoxFor(x => x.Product.QuanityInStock, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Product.QuanityInStock)
        </div>

        <div class="form-group">
            <label>Category:</label>
            @Html.DropDownListFor(x => x.Product.CategoryId, Model.Categories, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Product.CategoryId)
        </div>

        <div class="form-group">
            <div style="position: relative;">
                <label>Photo:</label>
                <a class="btn btn-default" href="javascript:;">
                    Select file...
                    <input type="file" name="Image" size="40"
                           style="position:absolute;z-index:2;top:0;
                           left:0;filter: alpha(opacity=0); opacity:0;
                           background-color:transparent;color:transparent;"
                           onchange='$("#upload-file-info").html($(this).val());'>
                    <span class='label label-info' id="upload-file-info"></span>
                </a>
                @if (@Model.Product.ImageData == null)
                {
                    <div class="form-control-static">No photo</div>
                }
                else
                {
                    <img class="img-thumbnail" width="250" height="150"
                         src="@Url.Action("GetImage", "Product", new { productId = Model.Product.Id , area = ""})" />
                }
            </div>
        </div>

        <div class="panel-footer">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel and go back to list", "ManageProducts", null, new { @class = "btn btn-default" })
        </div>

    }

</div>



