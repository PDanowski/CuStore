@model CuStore.Domain.Entities.Order
@{
    ViewBag.Title = "EditOrder";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="panel">
    <div class="panel-heading">
        <h3>Editing order: @Model.Id</h3>
    </div>

    @using (Html.BeginForm("EditOrder", "Manage", FormMethod.Post, new { enctype = "multipart/form-data", area = "Admin" }))
    {
        @Html.HiddenFor(m => m.Id)

        <div class="form-group">
            <label>Order ID:</label>
            @Html.DisplayFor(x => x.Id, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Status:</label>
            @Html.DisplayFor(x => x.Status, new { @class = "form-control" })
            @Html.EditorFor(x => x.Status, new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Date:</label>
            @Html.DisplayFor(x => x.OrderDate, new { @class = "form-control", rows = 5 })
        </div>
        <div class="form-group">
            <label>Value:</label>
            @Html.Display("totalValue", new { @class = "form-control" })
        </div>
        <div class="form-group">
            <label>Elements:</label>
            
            <table class="table table-striped table-condensed table-bordered">
                <tr>
                    <th>Product ID</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Value</th>
                </tr>

                @foreach (var item in Model.Cart.CartItems)
                {
                    <tr>
                        <td>@item.ProductId</td>
                        <td>@item.Product.Price.ToString("c")</td>
                        <td>@item.Quantity</td>
                        <td>@(item.Quantity * item.Product.Price)</td>
                    </tr>
                }

            </table>
        </div>

        <div class="form-group">
            <label>Shipping method:</label>
            @{
                var shippingMethodText = Model.ShippingMethod.Name + " " + Model.ShippingMethod.Price.ToString("c");
                @Html.DisplayFor(x => shippingMethodText, new {@class = "form-control"})
            }
        </div>
        <div class="form-group">
            <label>Shipping address:</label>
            @if (Model.UseUserAddress)
            {
                @Html.DisplayFor(x => x.Cart.User.UserAddress.Street, new { @class = "form-control" })
                var shippingAddressText = Model.Cart.User.UserAddress.PostalCode + " " + Model.Cart.User.UserAddress.City;
                @Html.DisplayFor(x => shippingAddressText, new { @class = "form-control" })
                @Html.DisplayFor(x => x.Cart.User.UserAddress.Country, new { @class = "form-control" })
            }
            else
            {
                @Html.DisplayFor(x => x.ShippingAddress.Street, new { @class = "form-control" });

                var shippingAddressText = Model.ShippingAddress.PostalCode + " " + Model.ShippingAddress.City;
                @Html.DisplayFor(x => shippingAddressText, new { @class = "form-control" });

                @Html.DisplayFor(x => x.ShippingAddress.Country, new {@class = "form-control"})
            }
        </div>

        <div class="panel-footer">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel and go back to list", "ManageOrders", null, new { @class = "btn btn-default" })
        </div>

    }

</div>

